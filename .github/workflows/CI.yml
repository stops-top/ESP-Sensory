name: CI

on:
  push:
    branches:
      - master

jobs:
  Marlin:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        test-platform:
        # Base Environments
        - DUE
        - DUE_archim
        - esp32
        - linux_native
        - mega2560
        - SAMD51_grandcentral_m4
        # Extended AVR Environments
        - FYSETC_F6
        - mega1280
        - rambo
        - sanguino1284p
        - sanguino644p
        # STM32F1 (Maple) Environments
        - STM32F103RC_btt
        - STM32F103RC_btt_USB
        - STM32F103RE_btt
        - STM32F103RE_btt_USB
        - STM32F103RC_fysetc
        - STM32F103RC_meeb
        - jgaurora_a5s_a1
        - STM32F103VE_longer
        - mks_robin
        - mks_robin_lite
        - mks_robin_pro
        - STM32F103RET6_creality
        - mks_robin_nano35

        # STM32 (ST) Environments

        - STM32F103RC_btt_stm32
        - STM32F407VE_black
        - STM32F401VE_STEVAL
        - BIGTREE_BTT002
        - BIGTREE_SKR_PRO
        - BIGTREE_GTR_V1_0
        - mks_robin_stm32
        - ARMED
        - FYSETC_S6
        - STM32F070CB_malyan
        - STM32F070RB_malyan
        - malyan_M300
        - FLYF407ZG
        - rumba32
        - LERDGEX
        - LERDGEK
        - mks_robin_nano35_stm32
        - NUCLEO_F767ZI
        - REMRAM_V1
        - BTT_SKR_SE_BX
        - chitu_f103

        # Put lengthy tests last

        - LPC1768
        - LPC1769

        # Non-working environment tests
        #- at90usb1286_cdc
        #- STM32F103CB_malyan
        #- STM32F103RE
        #- mks_robin_mini

    steps:
      - name: Select Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: '3.7' # Version range or exact version of a Python version to use, using semvers version range syntax.
          architecture: 'x64' # optional x64 or x86. Defaults to x64 if not specified

      - name: Install PlatformIO
        run: |
          pip install -U https://github.com/platformio/platformio-core/archive/develop.zip
          platformio update

      - uses: actions/checkout@v2
        with:
          submodules: "recursive"
          fetch-depth: 1

      - name: ${{ matrix.test-platform }}
        working-directory: Marlin
        run: |
          make tests-single-ci TEST_TARGET=${{ matrix.test-platform }}

  ESP3D:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.x
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"
          architecture: "x64"

      - name: Install Arduino
        working-directory: ESP3D
        run: bash ./.github/ci/install-arduino.sh

      - name: Install platformIO
        working-directory: ESP3D
        run: bash ./.github/ci/install-platformio.sh

      - name: Install ESP8266
        working-directory: ESP3D
        run: bash ./.github/ci/install-esp8266.sh

      - name: Install ESP32
        working-directory: ESP3D
        run: bash ./.github/ci/install-esp32.sh

      - name: Setup libraries
        working-directory: ESP3D
        run: bash ./.github/ci/prepare-libs.sh

      - name: Build ESP8266 arduino
        working-directory: ESP3D
        id: esp8266_1
        run: bash ./.github/ci/build-esp3d.sh esp8266 arduino
        continue-on-error: true

      - name: Build ESP32 arduino
        working-directory: ESP3D
        id: esp32_1
        run: bash ./.github/ci/build-esp3d.sh esp32 arduino
        continue-on-error: true

      - name: Build platformIO
        working-directory: ESP3D
        id: pio_1
        run: bash ./.github/ci/build-esp3d.sh esp32 pio
        continue-on-error: true

      # - name: Final check
      #   env:
      #     STEPS_CONTEXT: ${{ toJson(steps) }}
      #     DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
      #   if: steps.esp8266_1.outcome == 'failure' || steps.esp32_1.outcome == 'failure'
      #   run: bash ./.github/ci/final-check.sh "$GITHUB_RUN_ID" "failure"

      # - name: Final confirmation
      #   env:
      #     DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
      #   if: steps.esp8266_1.outcome == 'success' && steps.esp32_1.outcome == 'success'
      #   run: bash ./.github/ci/final-check.sh "$GITHUB_RUN_ID" "success"
